---
export interface INavItem {
    entry: {
        path?: string;
        title?: string;
        group?: string;
        children?: {
            path: string;
            title: string;
        }[];
    };
}

const { entry } = Astro.props;
const children = [];
if (entry.children) {
    entry.children.forEach((child) => {
        children.push(child);
    });
}
const url = Astro.request.url.split('/').slice(3);
let currentPath: string = '';
url.forEach((urlElement) => currentPath += `/${urlElement}`)

if (entry.path === currentPath) {
    entry.activeStyle = 'color: red';
} else {
    children.forEach((child) => {
        if (child.path === currentPath) {
            child.activeStyle = 'color: red';
        }
    })
}
---

<li>
    <a href={ entry.path } style={ entry.activeStyle } class="text-2xl text-indigo-600 hover:text-indigo-400">{ entry.title }</a>
    <div>
        <div class="text-2xl text-gray-600 mt-3">{ entry.group }</div>
        <ul>
            { children.map((child) => <li><a href={ child.path } style={ child.activeStyle } class="text-gray-700 hover:text-indigo-600 hover:bg-gray-50 group flex gap-x-3 rounded-md p-2 text-sm leading-6 font-semibold">{ child.title }</a></li>) }
        </ul>
    </div>
</li>
