---
import NavItem from '../components/NavItem.astro';

const {title} = Astro.props;
const {frontmatter} = Astro.props;
let pages = [];
let getPages = [
  await Astro.glob('../pages/*'),
  await Astro.glob('../pages/concepts/*'),
  await Astro.glob('../pages/concept-example/*'),
  await Astro.glob('../pages/legal-and-contact/*')
];

function pushGroup(groupName: string): void {
  if (pages.find((entry) => entry.group === groupName) === undefined) {
    pages.push({group: groupName, children: []});
  }
}

function pushNavEntry(arr: [], data: { path: string, title: string }): void {
  arr.push({path: data.path, title: data.title});
}

function createNavElement(path: string, title: string, group: { inGroup: boolean, groupName: string }): void {
  if (path === '') {
    path = '/';
  }

  if (group.inGroup) {
    pushGroup(group.groupName);
    pages.find((entry) => {
      if (entry.group === group.groupName) {
        pushNavEntry(entry.children, {path, title});
      }
    });
  } else {
    pushNavEntry(pages, {path, title});
  }
}

getPages.forEach((directory) => {
  directory.forEach((entry) => {
    createNavElement(entry.url, entry.frontmatter.title, entry.frontmatter.group);
  })
});
---
<html class="h-full bg-gray-50">
<head>
  <meta charset="UTF-8"/>
  <meta name="viewport" content="width=device-width"/>
  <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
  <meta name="generator" content={Astro.generator}/>
  <title>{frontmatter.title}</title>
</head>
<body class="h-full" lang="de">

<!-- Static sidebar for desktop -->
<div class="hidden lg:fixed lg:inset-y-0 lg:z-50 lg:flex lg:w-72 lg:flex-col">
  <div class="flex grow flex-col gap-y-5 overflow-y-auto border-r border-gray-200 bg-white px-6">
    <div class="flex grow flex-col gap-y-5 overflow-y-auto bg-white px-6 py-10">
      <nav class="flex flex-1 flex-col">
        <ul role="list" class="flex flex-1 flex-col gap-y-7">
          <li>
            <ul role="list" class="-mx-2 space-y-1">
              {pages.map((entry) =>
                <NavItem entry={entry}/>)}
            </ul>
          </li>
        </ul>
      </nav>
    </div>
  </div>
</div>
<main class="py-10 lg:pl-72">
  <div class="px-4 sm:px-6 lg:px-8 prose dark:prose-invert
  prose-h1:font-bold prose-h1:text-xl
  prose-a:text-blue-600 prose-p:text-justify prose-img:rounded-xl
  prose-headings:underline">
    <h1 class="text-4xl">{frontmatter.title}</h1>
    <slot/>
  </div>
</main>
<div class="block lg:hidden">
  <ul role="list" class="m-8 pb-24 space-y-1">
    {pages.map((entry) =>
      <NavItem entry={entry}/>)}
  </ul>
</div>

</body>
</html>
